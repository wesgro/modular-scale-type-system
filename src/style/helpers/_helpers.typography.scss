@use "sass:map";
@use "../settings/settings.typography" as type;
@use '~modularscale-sass/stylesheets/modularscale' with (
    $modularscale: type.$modularscale-config
);
@forward '~modularscale-sass/stylesheets/modularscale';

@mixin text-crop(
  $line-height: 1.3,
  $top-adjustment: 0px,
  $bottom-adjustment: 0px
) {
  // Configured in Step 1
  $top-crop: 11;
  $bottom-crop: 10;
  $crop-font-size: 36;
  $crop-line-height: 1.2;

  // Apply values to calculate em-based margins that work with any font size
  $dynamic-top-crop: max(
      ($top-crop + ($line-height - $crop-line-height) * ($crop-font-size / 2)),
      0
    ) / $crop-font-size;
  $dynamic-bottom-crop: max(
      (
        $bottom-crop + ($line-height - $crop-line-height) *
          ($crop-font-size / 2)
      ),
      0
    ) / $crop-font-size;

  // Mixin output
  line-height: $line-height;

  &::before,
  &::after {
    content: "";
    display: block;
    height: 0;
    width: 0;
  }

  &::before {
    margin-bottom: calc(-#{$dynamic-top-crop}em + #{$top-adjustment});
  }

  &::after {
    margin-top: calc(-#{$dynamic-bottom-crop}em + #{$bottom-adjustment});
  }
}

@mixin generate-css-variables($scales-to-generate: 6) {
  @each $scale-name, $scale-values in type.$modularscale-threads {
    --#{$scale-name}-scale: #{map.get($scale-values, ratio)};
    --size-#{$scale-name}--0: #{map.get($scale-values, base)};
    @for $i from 1 through $scales-to-generate {
      $prev-size: $i - 1;
      $css-var-previous: "--size-#{$scale-name}--#{$prev-size}";
      $css-var-current: "--size-#{$scale-name}--#{$i}";
      #{$css-var-current}: calc(
        var(#{$css-var-previous}) * var(--#{$scale-name}-scale)
      );
    }
  }
}

@mixin generate-heading-styles() {
  .headings {
    line-height: 1.2;
    font-weight: bold;
    @include text-crop(1.2);
  }

  .sub-headings {
    line-height: 1.4;
    @include text-crop(1.4, 0, 2px);
  }

  $heading-to-scale: (
    1: 5,
    2: 4,
    3: 3,
    4: 2,
    5: 1,
    6: 0,
  );
  @each $scale-name, $scale-values in type.$modularscale-threads {
    @each $heading, $scale in $heading-to-scale {
      .#{$scale-name}--#{$heading} {
        font-size: var(--size-#{$scale-name}--#{$scale});
      }
    }
  }
}
